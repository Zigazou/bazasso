# HLint configuration file for Bazasso
# https://github.com/ndmitchell/hlint

# Specify additional command line arguments
# - arguments: [--color, --cpp-simple, -XQuasiQuotes]

# Control which extensions/flags/modules/functions can be used
- extensions:
  - name:
      - MultiParamTypeClasses
      - OverloadedStrings
      - QuasiQuotes
      - TypeFamilies
      - NoImplicitPrelude
      - TemplateHaskell
      - RecordWildCards
      - ViewPatterns
      - ExplicitForAll
      - InstanceSigs
      - RankNTypes
      - DeriveGeneric
      - EmptyDataDecls
      - FlexibleInstances
      - GADTs
      - GeneralizedNewtypeDeriving

# - flags:
#   - {name: -w, within: []} # -w is allowed nowhere

# - modules:
#   - {name: [Data.Set, Data.HashSet], as: Set} # if you import Data.Set qualified, it must be as 'Set'
#   - {name: Control.Arrow, within: []} # Certain modules are banned entirely

# - functions:
#   - {name: unsafePerformIO, within: []} # unsafePerformIO can only appear in no modules

# Add custom hints for this project
# Will suggest replacing "wibbleMany [myvar]" with "wibbleOne myvar"
# - error: {lhs: "wibbleMany [x]", rhs: wibbleOne x}

# Turn on hints that are off by default
# Ban "module X(module X) where", to require a real export list
# - warn: {name: Use explicit module export list}

# Replace a $ b $ c with a . b $ c
# - group: {name: dollar, enabled: true}

# Generalise map to fmap, ++ to <>
# - group: {name: generalise, enabled: true}

# Ignore some builtin hints
# - ignore: {name: Use let}
# - ignore: {name: Use const, within: SpecialModule} # Only within certain modules

# Define some custom infix operators
# - fixity: infixr 3 ~^#^~
